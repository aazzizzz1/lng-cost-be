// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String  @unique
  password String
  role     String  @default("user")
  refreshToken String?
  createdAt DateTime @default(now())
}

model Project {
  id         Int      @id @default(autoincrement())
  name       String
  infrastruktur String? // Use this field instead of jenis
  kategori   String
  lokasi     String
  tahun      Int
  levelAACE  Int      @default(0) // Auto-calculated based on construction costs
  harga      Float    @default(0) // Auto-calculated based on construction costs
  satuan     String?
  volume     Float?    // New field for project volume
  inflasi    Float?   @default(0) // Optional project inflation
  createdAt  DateTime @default(now()) // Add createdAt field

  constructionCosts ConstructionCost[]
}

model ConstructionCost {
  id                    Int      @id @default(autoincrement())
  workcode              String  // NEW
  uraian                String
  specification         String?
  qty                   Float
  satuan                String
  hargaSatuan           Float
  totalHarga            Float
  aaceClass             Int
  accuracyLow           Float    // Changed from Int to Float
  accuracyHigh          Float    // Changed from Int to Float
  tahun                 Int
  infrastruktur         String
  volume                Float
  satuanVolume          String
  kelompok              String
  kelompokDetail        String
  lokasi                String
  tipe                  String
  createdAt             DateTime @default(now())

  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade) // Add onDelete: Cascade
  projectId Int
}

model UnitPrice {
  id                    Int      @id @default(autoincrement())
  workcode              String  // NEW
  uraian                String
  specification         String?
  qty                   Float
  satuan                String
  hargaSatuan           Float
  totalHarga            Float
  aaceClass             Int
  accuracyLow           Float    // Changed from Int to Float
  accuracyHigh          Float    // Changed from Int to Float
  tahun                 Int
  infrastruktur         String
  volume                Float
  satuanVolume          String
  kelompok              String
  kelompokDetail        String
  proyek                String
  lokasi                String
  tipe                  String
  createdAt             DateTime @default(now())
}

model cci {
  id           Int     @id @default(autoincrement())
  kodeProvinsi Int
  provinsi     String
  cci          Float
  delivery     Float   @default(0) // NEW: delivery factor/index
}

model CalculatorTotalCost {
  id            Int      @id @default(autoincrement())
  infrastructure String
  volume         Float
  unit           String
  totalCost      Float
  year           Int
  location       String
  low            Float
  high           Float
  information    String
  createdAt      DateTime @default(now())
}